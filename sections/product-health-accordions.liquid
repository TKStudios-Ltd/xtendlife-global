{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}
{{ 'component-accordion.css' | asset_url | stylesheet_tag }}

{%- style -%}
/* ——— YOUR EXACT CUSTOM STYLE HOOKS FROM image-with-text.liquid ——— */
.section-{{ section.id }}-padding {
  padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
  padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}
@media screen and (min-width: 750px) {
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
}
.section-{{ section.id }}-padding .image-with-text__text-item {
    position: relative;
}
.section-{{ section.id }}-padding .image-with-text__content {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

{% if section.settings.image_bleed %}
@media screen and (min-width: 750px) {
  .image-with-text--edge-{{ section.id }} .image-with-text__outer {
    width: 100%;
    overflow: hidden;
  }
  .image-with-text--edge-{{ section.id }} .image-with-text__text-item > .page-width {
    max-width: calc({{ settings.page_width }}px / 2);
    margin: 0 0 0 auto;
    height: 100%;
  }
  .image-with-text--edge-{{ section.id }} .image-with-text__grid { column-gap: 0; row-gap: 0; }
  .image-with-text--edge-{{ section.id }} .image-with-text__media img,
  .image-with-text--edge-{{ section.id }} .image-with-text__media,
  .image-with-text--edge-{{ section.id }} .image-with-text__media-item {
    max-height: calc(100vh - 105px);
  }
  .image-with-text--edge-{{ section.id }} .image-with-text__media-item { flex: 0 0 auto; }
  .image-with-text--edge-{{ section.id }} .image-with-text__media-item--small  { --media-col-base: 33.3333%; }
  .image-with-text--edge-{{ section.id }} .image-with-text__media-item--medium { --media-col-base: 50%; }
  .image-with-text--edge-{{ section.id }} .image-with-text__media-item--large  { --media-col-base: 66.6667%; }

  /* Image on LEFT (image_first) – bleed to left edge */
  .image-with-text--edge-{{ section.id }} .image-with-text__grid:not(.image-with-text__grid--reverse) .image-with-text__media-item {
    margin-left: calc((100vw - {{ settings.page_width }}px) / -2);
    width: calc(var(--media-col-base, 50%) + (100vw - {{ settings.page_width }}px) / 2);
  }
  .image-with-text--edge-{{ section.id }} .image-with-text__media { border-radius: 0; }
}
@media screen and (min-width: 1400px) {
  /* Image on RIGHT (text_first) – bleed to right edge */
  .image-with-text--edge-{{ section.id }} .image-with-text__grid.image-with-text__grid--reverse .image-with-text__media-item {
    margin-right: calc((100vw - {{ settings.page_width }}px) / -2);
    width: calc(var(--media-col-base, 50%) + (100vw - {{ settings.page_width }}px) / 2);
  }
}
{% endif %}

@media (min-width: 1600px) {
  .section-pha .image-with-text__media-item .image-with-text__media {
    max-height: 850px;
    padding-bottom: 55vw !important;
  }
}
@media (min-width: 1600px) and (max-width: 1999px) {
  .section-pha .image-with-text__media-item .image-with-text__media img {
    left: -5vw !important;
  }
}
@media (min-width: 2000px) and (max-width: 2399px) {
  .section-pha .image-with-text__media-item .image-with-text__media img {
    left: -10vw !important;
  }
}
@media (min-width: 2400px) {
  .section-pha .image-with-text__media-item .image-with-text__media img {
    left: -15vw !important;
  }
}

/* Collapsible rows – plus/minus toggle */
#ImageWithText--{{ section.id }} details[open] > summary .icon-plus { transform: rotate(45deg); }
#ImageWithText--{{ section.id }} .accordion summary .icon-plus { width: 1.4rem; height: 1.4rem; vertical-align: middle; right: 0; }
#ImageWithText--{{ section.id }} .accordion summary { display: flex; align-items: center; justify-content: space-between; gap: .75rem; padding: 1rem 0; }
#ImageWithText--{{ section.id }} .accordion { width: 100%; margin-top: 0 !important; }
#ImageWithText--{{ section.id }} .accordion__content { margin-bottom: 1.25rem; }
{%- endstyle -%}

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
  if section.settings.color_scheme == section.settings.section_color_scheme and section.settings.content_layout == 'no-overlap'
    assign remove_color_classes = true
  endif
-%}

{% if section.settings.heading != blank %}

<div class="section-pha section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }} {% if section.settings.image_bleed %}image-with-text--edge-{{ section.id }}{% endif %}">
  {% if section.settings.image_bleed %}
    <div class="image-with-text__outer">
  {% else %}
    <div class="page-width">
  {% endif %}

    <div class="image-with-text image-with-text--{{ section.settings.content_layout }} isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% unless section.settings.color_scheme == section.settings.section_color_scheme and settings.media_border_thickness > 0 and settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0 %} collapse-corners{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <div class="image-with-text__grid grid grid--gapless grid--1-col {% if section.settings.desktop_image_width == 'medium' %}grid--2-col-tablet{% else %}grid--3-col-tablet{% endif %}{% if section.settings.layout == 'text_first' %} image-with-text__grid--reverse{% endif %}">

        {%- comment -%} MEDIA COLUMN (keeps Dawn classes) {%- endcomment -%}
        <div class="image-with-text__media-item image-with-text__media-item--{{ section.settings.desktop_image_width }} image-with-text__media-item--{{ section.settings.desktop_content_position }} grid__item">
          {% assign replacement_text = section.settings.image_replacement_text | strip %}
          {% if replacement_text != blank %}
            <div class="image-with-text__media image-with-text__media--{{ section.settings.height }} global-media-settings{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}">
              <h2 class="image-with-text__heading inline-richtext h1">{{ replacement_text | escape }}</h2>
            </div>
          {% else %}
            <div
              class="image-with-text__media image-with-text__media--{{ section.settings.height }} global-media-settings{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}{% if section.settings.image != blank %} media{% else %} image-with-text__media--placeholder placeholder{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}"
              {% if section.settings.height == 'adapt' and section.settings.image != blank %}
                style="padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;"
              {% endif %}
            >
              {%- if section.settings.image != blank -%}
                {%- if section.settings.image_behavior == 'ambient' or section.settings.image_behavior == 'zoom-in' -%}
                  {%- assign widths = '198, 432, 642, 900, 1284, 1800' -%}
                  {%- capture sizes -%}
                    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 1.6667 }}px,
                    (min-width: 750px) calc((100vw - 130px) / 1.667), calc((100vw - 50px) / 1.667)
                  {%- endcapture -%}
                {%- else -%}
                  {%- assign widths = '165, 360, 535, 750, 1070, 1500' -%}
                  {%- capture sizes -%}
                    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
                    (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
                  {%- endcapture -%}
                {%- endif -%}
                {{
                  section.settings.image
                  | image_url: width: 1500
                  | image_tag: sizes: sizes, widths: widths, fetchpriority: fetch_priority
                }}
              {%- else -%}
                {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
              {%- endif -%}
            </div>
          {% endif %}
        </div>

        {%- comment -%} TEXT / ACCORDIONS COLUMN (left by default; image moves right with grid--reverse) {%- endcomment -%}
        <div class="image-with-text__text-item grid__item">
          {% if section.settings.image_bleed %}<div class="page-width">{% endif %}
          <div
            id="ImageWithText--{{ section.id }}"
            class="image-with-text__content image-with-text__content--{{ section.settings.desktop_content_position }} image-with-text__content--desktop-{{ section.settings.desktop_content_alignment }} image-with-text__content--mobile-{{ section.settings.mobile_content_alignment }} image-with-text__content--{{ section.settings.height }} content-container{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}"
          >
            <div style="width: 100%;">
                {%- if section.settings.heading != blank -%}
                <h2 class="image-with-text__heading inline-richtext {{ section.settings.heading_size }}">
                    {{ section.settings.heading }}
                </h2>
                {%- endif -%}

                {%- if section.settings.intro != blank -%}
                <div class="image-with-text__text rte">{{ section.settings.intro }}</div>
                {%- endif -%}
            </div>

            {%- assign ns = section.settings.metafield_namespace | default: 'custom' -%}
            {%- assign key = section.settings.metafield_key | default: 'health_benefits' -%}
            {%- assign mo_list = product.metafields[ns][key] -%}

            <div style="width: 100%;">
            {%- if section.settings.use_blocks or mo_list == blank -%}
              {%- for block in section.blocks -%}
                {%- if block.type == 'collapsible_row' -%}
                  <div class="accordion" {{ block.shopify_attributes }}>
                    <details {% if forloop.first and section.settings.open_first %}open{% elsif block.settings.open %}open{% endif %}>
                      <summary id="Summary-{{ block.id }}-{{ section.id }}">
                        <h3 class="accordion__title inline-richtext h4">{{ block.settings.heading | escape }}</h3>
                        <span class="accordion__icon-set" aria-hidden="true">
                          {{ 'icon-plus.svg' | inline_asset_content | replace: '<svg', '<svg class="icon-plus"' }}
                        </span>
                      </summary>
                      <div class="accordion__content rte" role="region" aria-labelledby="Summary-{{ block.id }}-{{ section.id }}">
                        {{ block.settings.row_content }}
                        {{ block.settings.page.content }}
                      </div>
                    </details>
                  </div>
                {%- endif -%}
              {%- endfor -%}
            {%- else -%}
              {%- assign title_field = section.settings.mo_title_field | default: 'title' -%}
              {%- assign content_field = section.settings.mo_content_field | default: 'content' -%}
              {%- for item in mo_list.value -%}
                {%- assign t = item[title_field] -%}
                {%- assign c = item[content_field] -%}
                <div class="accordion">
                  <details {% if forloop.first and section.settings.open_first %}open{% endif %}>
                    <summary>
                      <h3 class="accordion__title inline-richtext h4">
                        {%- if t != blank -%}{{ t }}{%- else -%}Health Benefit {{ forloop.index }}{%- endif -%}
                      </h3>
                      <span class="accordion__icon-set" aria-hidden="true">
                        {{ 'icon-plus.svg' | inline_asset_content | replace: '<svg', '<svg class="icon-plus"' }}
                      </span>
                    </summary>
                    <div class="accordion__content rte">
                      {%- if c != blank -%}{{ c | metafield_tag | default: c }}{%- endif -%}
                    </div>
                  </details>
                </div>
              {%- endfor -%}
            {%- endif -%}
            </div>
          </div>
          {% if section.settings.image_bleed %}</div>{% endif %}
        </div>

      </div>
    </div>
  </div>
</div>

{% endif %}

<script>
(function() {
  const sectionEl = document.getElementById('ImageWithText--{{ section.id }}');
  if (!sectionEl) return;

  const accordions = sectionEl.querySelectorAll('.accordion details');

  accordions.forEach((detailsEl) => {
    const summary = detailsEl.querySelector('summary');
    if (!summary) return;

    summary.addEventListener('click', function(e) {
      e.preventDefault(); // stop native <details> toggle

      const isOpen = detailsEl.hasAttribute('open');

      // close all
      accordions.forEach(d => d.removeAttribute('open'));

      // if the one we clicked was not already open, open it
      if (!isOpen) {
        detailsEl.setAttribute('open', '');
      }
    });
  });
})();
</script>


{% schema %}
{
  "name": "Product HB Accordions",
  "class": "section",
  "disabled_on": { "groups": ["header", "footer"] },
  "settings": [
    { "type": "text", "id": "heading", "label": "Title (left column)", "default": "Health Benefits" },
    {
      "type": "select", "id": "heading_size", "label": "Title size",
      "options": [
        { "value": "h2", "label": "H2" },
        { "value": "h1", "label": "H1" },
        { "value": "h0", "label": "H0" },
        { "value": "hxl", "label": "HXL" },
        { "value": "hxxl", "label": "HXXL" }
      ],
      "default": "h2"
    },
    { "type": "richtext", "id": "intro", "label": "Intro (optional)" },

    { "type": "header", "content": "Metafield source (list of metaobjects)" },
    { "type": "text", "id": "metafield_namespace", "label": "Namespace", "default": "custom" },
    { "type": "text", "id": "metafield_key", "label": "Key", "default": "health_benefits", "info": "Product metafield like custom.health_benefits (List > Metaobject)" },
    { "type": "text", "id": "mo_title_field", "label": "Metaobject title field id", "default": "title" },
    { "type": "text", "id": "mo_content_field", "label": "Metaobject content field id", "default": "content" },
    { "type": "checkbox", "id": "open_first", "label": "Open first row by default", "default": false },
    { "type": "checkbox", "id": "use_blocks", "label": "Use manual blocks instead of metafield", "default": false },

    { "type": "header", "content": "Image (right/left via Layout)" },
    { "type": "image_picker", "id": "image", "label": "Image" },
    {
      "type": "select", "id": "height", "label": "Image height",
      "options": [
        { "value": "adapt", "label": "Adapt to image" },
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "adapt"
    },
    {
      "type": "select", "id": "desktop_image_width", "label": "Desktop image width",
      "options": [
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "medium"
    },
    {
      "type": "select", "id": "layout", "label": "Layout (match Dawn)",
      "options": [
        { "value": "image_first", "label": "Image left (default)" },
        { "value": "text_first",  "label": "Image right (text first)" }
      ],
      "default": "text_first"
    },
    {
      "type": "select", "id": "image_behavior", "label": "Image animation",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "ambient", "label": "Ambient" },
        { "value": "zoom-in", "label": "Zoom in" }
      ],
      "default": "none"
    },
    { "type": "checkbox", "id": "image_bleed", "label": "Bleed image to viewport edge (desktop)", "default": false },

    { "type": "header", "content": "Colors" },
    { "type": "color_scheme", "id": "section_color_scheme", "label": "Section color scheme", "default": "scheme-1" },
    { "type": "color_scheme", "id": "color_scheme", "label": "Container color scheme", "default": "scheme-1" },

    { "type": "header", "content": "Padding" },
    { "type": "range", "id": "padding_top", "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Padding top", "default": 36 },
    { "type": "range", "id": "padding_bottom", "min": 0, "max": 100, "step": 4, "unit": "px", "label": "Padding bottom", "default": 36 }
  ],
  "blocks": [
    {
      "type": "collapsible_row",
      "name": "Collapsible row (manual)",
      "settings": [
        { "type": "text", "id": "heading", "label": "Heading", "default": "More details" },
        { "type": "richtext", "id": "row_content", "label": "Content" },
        { "type": "page", "id": "page", "label": "Page (optional)" },
        { "type": "checkbox", "id": "open", "label": "Open by default", "default": false }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product HB Accordions",
      "blocks": [
        { "type": "collapsible_row", "settings": { "heading": "Benefit One",   "row_content": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio.</p>" } },
        { "type": "collapsible_row", "settings": { "heading": "Benefit Two",   "row_content": "<p>Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet.</p>" } },
        { "type": "collapsible_row", "settings": { "heading": "Benefit Three", "row_content": "<p>Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.</p>" } },
        { "type": "collapsible_row", "settings": { "heading": "Benefit Four",  "row_content": "<p>Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent.</p>" } }
      ]
    }
  ]
}
{% endschema %}
