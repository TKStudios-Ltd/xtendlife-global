{{ 'section-collection-list.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    .collection-list-wrapper { flex-direction: row !important; }
  }
  @media (max-width: 749px) {
    .collection-list-wrapper .title-wrapper--no-top-margin-only {
      margin-bottom: 3rem;
      padding: 0 2rem;
    }
  }
  .collection-list-wrapper { display:flex; flex-direction: column; }
  .collection-list-wrapper .title-wrapper--no-top-margin-only {
    flex: 0 0 25%;
    display:flex; justify-content:flex-start; align-items:flex-start;
  }
  .collection-list-wrapper .collection-list-desktop {
    flex: 0 0 75%;
    width:100%;
  }
  .collection-list-mobile .swiper-slide-active .card-wrapper .card__heading .icon-wrap,
  .collection-list-mobile .swiper-slide-active .card-wrapper .card__heading {
    opacity: 1;
  }
  /* Mobile/Tablet Swiper container */
  .collection-list-mobile { 
    overflow:hidden; 
    width:100%; 
    position:relative; 
    padding: 0 2rem;
  }
  .collection-list-mobile .swiper { overflow:visible; }
  .collection-list-mobile .swiper-wrapper { display:flex; }
  .collection-list-mobile .swiper-slide { height:auto; }

  /* Progress bar styling */
  #cl-pagination-{{ section.id }}.swiper-pagination-progressbar {
    margin-top: 4rem;
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="collection-list-wrapper page-width isolate{% if section.settings.title == blank %} no-heading{% endif %}{% if section.settings.show_view_all == false or section.blocks.size > collections.size %} no-mobile-link{% endif %} section-{{ section.id }}-padding">
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin-only">
        <h2
          id="SectionHeading-{{ section.id }}"
          class="collection-list-title inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        >
          {{ section.settings.title }}
        </h2>
      </div>
    {%- endunless -%}

    {%- comment -%} Desktop grid layout (visible ≥ 990px) {%- endcomment -%}
    <div class="collection-list-desktop small-hide medium-hide">
      <ul class="collection-list grid grid--{{ section.settings.columns_desktop }}-col-desktop contains-card">
        {%- for block in section.blocks -%}
          <li class="collection-list__item grid__item">
            {% render 'card-collection',
              card_collection: block.settings.collection,
              media_aspect_ratio: section.settings.image_ratio,
              columns: 3,
              placeholder_image: 'collection-apparel-' | append: forloop.index0 | modulo: 4 | plus: 1,
              custom_image: block.settings.custom_image,
              custom_title: block.settings.custom_title,
              background_color: block.settings.background_color
            %}
          </li>
        {%- endfor -%}
      </ul>
    </div>

    {%- comment -%} Mobile/Tablet Swiper (visible < 990px) {%- endcomment -%}
    <div class="collection-list-mobile large-up-hide">
      <div class="swiper" id="cl-swiper-{{ section.id }}">
        <div class="swiper-wrapper">
          {%- for block in section.blocks -%}
            <div class="swiper-slide">
              {% render 'card-collection',
                card_collection: block.settings.collection,
                media_aspect_ratio: section.settings.image_ratio,
                columns: 1,
                placeholder_image: 'collection-apparel-' | append: forloop.index0 | modulo: 4 | plus: 1,
                custom_image: block.settings.custom_image,
                custom_title: block.settings.custom_title,
                background_color: block.settings.background_color
              %}
            </div>
          {%- endfor -%}
        </div>
      </div>
      <div id="cl-pagination-{{ section.id }}" class="swiper-pagination"></div>
    </div>

    {%- if section.settings.show_view_all and section.blocks.size < collections.size -%}
      <div
        class="center collection-list-view-all{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        <a
          href="{{ routes.collections_url }}"
          class="button"
          id="ViewAllButton-{{ section.id }}"
          aria-labelledby="ViewAllButton-{{ section.id }} SectionHeading-{{ section.id }}"
        >
          {{- 'sections.collection_list.view_all' | t -}}
        </a>
      </div>
    {%- endif -%}
  </div>
</div>

<script>
(function(){
  const el = document.querySelector('#cl-swiper-{{ section.id }}');
  if (!el) return;

  function init(){
    if (typeof window.Swiper === 'undefined') { setTimeout(init, 50); return; }
    if (el.dataset.swiperReady === '1') return;

    const sw = new Swiper(el, {
      slidesPerView: 1.3,
      spaceBetween: 16,
      speed: 500,
      watchOverflow: true,
      breakpoints: {
        750: { slidesPerView: 2.3 }
        // ≥990 not needed because this swiper is hidden on desktop
      },
      pagination: {
        el: '#cl-pagination-{{ section.id }}',
        type: 'progressbar'
      }
    });

    el.dataset.swiperReady = '1';

    // keep layout tight as images/fonts load
    const update = () => { try { sw.update(); } catch(e) {} };
    window.addEventListener('load', update, { once:true, passive:true });
    el.querySelectorAll('img').forEach(img => {
      if (!img.complete) img.addEventListener('load', update, { once:true, passive:true });
    });
  }

  init();
})();
</script>



{% schema %}
{
  "name": "t:sections.collection-list.name",
  "tag": "section",
  "class": "section section-collection-list",
  "max_blocks": 15,
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "t:sections.collection-list.settings.title.default",
      "label": "t:sections.collection-list.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "header",
      "content": "t:sections.collection-list.settings.header_layout.content"
    },    
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.collection-list.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.collection-list.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.collection-list.settings.image_ratio.options__3.label"
        }
      ],
      "default": "square",
      "label": "t:sections.collection-list.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.collection-list.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "default": false,
      "label": "t:sections.collection-list.settings.show_view_all.label",
      "info": "t:sections.collection-list.settings.show_view_all.info"   
    },
    {
      "type": "header",
      "content": "t:sections.collection-list.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.collection-list.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.collection-list.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.collection-list.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.collection-list.settings.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "featured_collection",
      "name": "t:sections.collection-list.blocks.featured_collection.name",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "t:sections.collection-list.blocks.featured_collection.settings.collection.label"
        },
        {
          "type": "image_picker",
          "id": "custom_image",
          "label": "Custom Image (optional)"
        },
        {
          "type": "text",
          "id": "custom_title",
          "label": "Custom Title (optional)"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Background Color (optional)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collection-list.presets.name",
      "blocks": [
        {
          "type": "featured_collection"
        },
        {
          "type": "featured_collection"
        },
        {
          "type": "featured_collection"
        }
      ]
    }
  ]
}
{% endschema %}
